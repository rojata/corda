buildscript {
    // Shaded version of ASM to avoid conflict with root project.
    ext.asm_version = '6.1.1'
    ext.deterministic_rt_version = '1.0-20180625.120901-7'

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.3'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '2.0.3'
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile "org.slf4j:jul-to-slf4j:$slf4j_version"
    compile "org.apache.logging.log4j:log4j-slf4j-impl:$log4j_version"
    compile "com.jcabi:jcabi-manifests:$jcabi_manifests_version"

    // ASM: byte code manipulation library
    compile "org.ow2.asm:asm:$asm_version"
    compile "org.ow2.asm:asm-tree:$asm_version"
    compile "org.ow2.asm:asm-commons:$asm_version"

    // Classpath scanner
    compile "io.github.lukehutch:fast-classpath-scanner:$fast_classpath_scanner_version"

    // Deterministic runtime - used in whitelist generation
    runtime "net.corda:deterministic-rt:$deterministic_rt_version:api"

    // Test utilities
    testCompile "junit:junit:$junit_version"
    testCompile "org.assertj:assertj-core:$assertj_version"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "$artifactory_contextUrl/corda-dev"
    }
}

task generateWhitelist(type: JavaExec) {
    def jars = configurations.runtime.collect {
        it.toString()
    }.findAll {
        it.toString().contains("deterministic-rt")
    }
    classpath = sourceSets.main.runtimeClasspath
    main = 'net.corda.djvm.tools.cli.Program'
    args = ['whitelist', 'generate', '-o', 'src/main/resources/jdk8-deterministic.dat.gz'] + jars
}

jar {
    manifest {
        attributes(
                'Automatic-Module-Name': 'net.corda.djvm',
                'Build-Date': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        )
    }
}

shadowJar {
    baseName = "djvm"
    classifier = ""
    exclude 'deterministic-rt*.jar'
    dependencies {
        exclude(dependency('com.jcabi:.*:.*'))
        exclude(dependency('org.apache.*:.*:.*'))
        exclude(dependency('org.jetbrains.*:.*:.*'))
        exclude(dependency('org.slf4j:.*:.*'))
        exclude(dependency('io.github.lukehutch:.*:.*'))
    }
    relocate 'org.objectweb.asm', 'djvm.org.objectweb.asm'
}

build.dependsOn(shadowJar)
